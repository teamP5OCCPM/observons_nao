# app/config/config.yml

imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_themes: ['form/bootstrap_4_layout.html.twig']

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        dql:
            string_functions:
                regexp: DoctrineExtensions\Query\Mysql\Regexp

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

stof_doctrine_extensions:
    orm:
        default:
            sluggable: true

fos_user:
    db_driver: orm # Le type de BDD à utiliser, nous utilisons l'ORM Doctrine
    firewall_name: main # Le nom du firewall derrière lequel on utilisera ces utilisateurs
    user_class: AppBundle\Entity\User # La classe de l'entité User que nous utilisons
    from_email:
        address: "%mailer_user%"
        sender_name: "%mailer_user%"
    registration:
        form:
            type: AppBundle\Form\RegistrationType
        confirmation:
            enabled: true
            from_email:
                address:        '%mailer_user%'
                sender_name:    NAO-observons.net - Inscription

    resetting:
        email:
            from_email:
                address:        '%mailer_user%'
                sender_name:    NAO-observons.net - Ré-initialisation

vich_uploader:
    db_driver: orm
    mappings:
        taxref_csv:
                upload_destination: '%kernel.root_dir%/../web/taxref'
                namer:
                    service: vich_uploader.namer_property
                    options: { property: 'csvFile', transliterate: true}
        observation_image:
            upload_destination: '%kernel.root_dir%/../web/img/observations'
            namer:
                service: vich_uploader.namer_property
                options: { property: 'title', transliterate: true}
        article_image:
                    upload_destination: '%kernel.root_dir%/../web/img/articles'
                    namer:
                        service: vich_uploader.namer_property
                        options: { property: 'title', transliterate: true}
